#!/usr/bin/env bash

export EDITOR=vi

export HISTCONTROL=erasedups:ignorespace
export HISTTIMEFORMAT='%F %T '
export HISTSIZE=100

alias c='clear'
alias h='history'
alias ports='netstat -tulanp'
alias update='sudo apt update && sudo apt upgrade && sudo apt autoremove'

function canonical_which() {
    if [ "$1" = "-a" ]; then
        \which -a "$2"
    else
        readlink -e "$(command -v "$1")"
    fi
}
alias which='canonical_which'

function echodo() {
    printf "Starting command: %s" "$1"
    for arg in "${@:2}"; do
        printf " '%s'" "$arg"
    done
    printf "\n"
    "$@"
}

if command -v batcat >/dev/null; then
    alias bat='batcat'
    alias cat='bat --style=plain --pager=never'
    alias less='bat --style=plain'
fi

umlet_path="$HOME/Programs/umlet/Umlet/umlet.sh"
if [ -x "$umlet_path" ]; then
    alias umlet="$umlet_path"
fi

if [ -d "$HOME/.sdkman" ]; then
    export SDKMAN_DIR="$HOME/.sdkman"
    sdkman_path="$SDKMAN_DIR/bin/sdkman-init.sh"
    if [ -x "$sdkman_path" ]; then
        source "$sdkman_path"
    fi
fi

function paged_jq() {
    # -F tell less exit if output content can be displayed on one screen
    # See: https://github.com/stedolan/jq/issues/764#issuecomment-379688272
    jq --color-output "$@" | less --quit-if-one-screen --RAW-CONTROL-CHARS
}
alias pjq='paged_jq'

function remove_failed_or_unknown_command_from_history() {
    rc=$?
    if  [ $rc -eq 127 ] || [ $rc -eq 255 ]; then
        history -d "$HISTCMD"
    fi
}
trap remove_failed_or_unknown_command_from_history ERR
