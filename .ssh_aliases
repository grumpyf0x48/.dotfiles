#!/bin/bash

function ssh_echodo() {
    if [ -n "${DRY_RUN}" ]; then
        echo "$@"
    else
        ssh_run_cmd "$@"
    fi
}

function ssh_run_cmd() {
    if [ -n "${DEBUG}" ]; then
        printf "[DEBUG] Starting command: %s" "$1" >&2
        for arg in "${@:2}"; do
            printf " '%s'" "$arg" >&2
        done
        printf "\n" >&2
    fi
    "$@" || return 1
}

function ssh_is_hostname() {
    [[ "$1" == *.local ]]
}

function ssh_is_file() {
    if [[ "$1" == -* ]]; then
        # Is an option
        return 1
    fi
    if [[ "$1" == */ ]]; then
        # Is a folder
        return 1
    fi
    if ! [[ "$1" == *.* ]]; then
        # Has no extension
        return 1
    fi
    dirname=$(readlink -e "$(dirname "$1")")
    if [ "${dirname}" != "${PWD}" ]; then
        # Not in current folder
        return 1
    fi
}

function ssh_is_input_file() {
    if ! [ -r "$file" ]; then
        return 1
    fi
}

function ssh_is_output_file() {
    if [[ "$1" == *export* ]] || [[ "$1" == *output* ]]; then
        return 0
    fi
    if $(ssh_is_input_file "$1"); then
        return 1
    fi
}

function ssh_parse_cmd_args() {
    all_files=()
    in_files=()
    out_files=()
    for file in "$@"; do
        if $(ssh_is_hostname "$file"); then
            host="$file"
        elif $(ssh_is_file "$file"); then
            all_files+=("$file")
            if $(ssh_is_output_file "$file"); then
                out_files+=("$file")
            elif $(ssh_is_input_file "$file"); then
                in_files+=("$file")
            fi
        fi
    done
}

function ssh_with_auto_scp() {
    ssh_parse_cmd_args "$@"

    if [ ${#in_files[@]} -ge 1 ]; then
        ssh_echodo scp "${in_files[@]}" "${host}":. || return 1
    fi

    ssh_echodo ssh "$@" || return 1

    for out_file in "${out_files[@]}"; do
        ssh_echodo scp "${host}":"${out_file}" "${out_file}" || return 1
    done

    if [ ${#all_files[@]} -ge 1 ]; then
        ssh_echodo ssh "${host}" rm "${all_files[@]}" || return 1
    fi
}

alias ssh_with_auto_scp='ssh_with_auto_scp'
